➜ exchange-rate git:(main) git --no-pager diff
diff --git a/README.md b/README.md
index 1dfab61..4f6b3c2 100644
--- a/README.md
+++ b/README.md
@@ -29,8 +29,8 @@ Follow these steps to get the backend development environment up and running:
     Navigate to your desired directory in your terminal and clone the project:
 
     ```bash
-    git clone <repository-url> # Replace with your actual repository URL
-    cd exchange-rate-application # Navigate into your project's root directory
+    git clone https://github.com/eddyyxxyy/exchange_rate.git
+    cd exchange-rate
     ```
 
 3.  **Project Structure:**
@@ -38,22 +38,34 @@ Follow these steps to get the backend development environment up and running:
 
     ```
     exchange-rate-application/
+    │
     ├── backend/                 # Contains the PHP backend application files
+    │   ├── .env                 # Environment variables used by both Docker and the PHP app
+    │   ├── bootstrap/           # Application initialization
+    │   │   └── ...
+    │   ├── config/
+    │   │   └── app.php
     │   ├── public/
     │   │   └── index.php
     │   ├── composer.json        # Backend's Composer configuration
-    │   └── ... (your PHP application source code)
+    │   └── src/
+    │   │   └── ... (Application source code)
+    │
+    ├── frontend/                 # Contains the frontend application files
+    │   └──  ... (Application source code)
+    │
     ├── docker/                  # Docker-related configurations
     │   ├── docker-compose.yaml  # Main Docker Compose orchestration file
-    │   ├── php-fpm-custom/      # Custom Dockerfile for PHP-FPM service
+    │   ├── php-fpm/      # Custom Dockerfile for PHP-FPM service
     │   │   └── Dockerfile
     │   └── nginx/               # Nginx server configurations
     │       └── server_block.conf
+    │
     └── README.md
     └── LICENSE.md
     ```

-4.  **`docker/php-fpm-custom/Dockerfile` Content:**
+4.  **`docker/php-fpm/Dockerfile` Content:**
     This custom Dockerfile extends the base Bitnami PHP-FPM image, installing essential build tools and the `phpredis` extension required by the backend.

     ```dockerfile
@@ -94,26 +106,35 @@ Follow these steps to get the backend development environment up and running:
         listen 80;
         server_name localhost;
         index index.php;
-        root /app/public; # IMPORTANT: This path is inside the Docker container and points to your backend's public directory
+        root /app/public;

+        # SPA frontend (React, etc.)
         location / {
-            # Try to serve files directly, then pass the request to index.php for Slim framework routing
+            try_files $uri /index.html;
+        }
+
+        # Slim PHP
+        location = /api {
+            return 301 /api/;
+        }
+
+        location ^~ /api/ {
             try_files $uri /index.php$is_args$args;
         }

-        location ~ \.php {
-            # Pass PHP requests to the PHP-FPM service
-            try_files $uri =404; # Ensures that only existing PHP files are processed
+        # PHP handler
+        location ~ \.php$ {
+            try_files $uri =404;
             fastcgi_split_path_info ^(.+\.php)(/.+)$;
             include fastcgi_params;
             fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
             fastcgi_param SCRIPT_NAME $fastcgi_script_name;
             fastcgi_index index.php;
-            fastcgi_pass phpfpm:9000; # 'phpfpm' is the service name in docker-compose.yaml
+            fastcgi_pass phpfpm:9000;
         }

-        # Deny access to sensitive files (e.g., .env files)
-        location ~ /\.env {
+        # Security
+        location ~ /\.(?!well-known).* {
             deny all;
         }
     }
@@ -127,83 +148,71 @@ Follow these steps to get the backend development environment up and running:

     networks:
       app-tier:
-        driver: bridge # Defines a custom network for inter-service communication
+        driver: bridge

     services:
       phpfpm:
-        build: ./php-fpm-custom # Build context: looks for Dockerfile in this directory
+        build: ./php-fpm
+        depends_on:
+          - mysql
+          - redis
         networks:
           - app-tier
         volumes:
-          - ../backend:/app # Mounts your local 'backend' directory into '/app' in the container
-        environment:
-          - PHP_ENABLE_OPCACHE=no           # Disable OPcache for instant code changes in development
-          - PHP_DATE_TIMEZONE=America/Sao_Paulo # Set your desired timezone
-          - PHP_DISPLAY_ERRORS=On           # Show PHP errors in development (turn off in production!)
-          - PHP_EXPOSE_PHP=no               # Hide PHP version in HTTP headers (good practice)
-          - PHP_MEMORY_LIMIT=256M           # Increase PHP memory limit if needed
+          - ../backend:/app
+        env_file: ../backend/.env

       nginx:
-        image: bitnami/nginx:latest
+        image: bitnami/nginx:1.29.0
         depends_on:
-          - phpfpm # Ensure PHP-FPM starts before Nginx
+          - phpfpm
         networks:
           - app-tier
         ports:
-          - "80:80"   # Map host port 80 to container port 80 (HTTP)
-          - "443:443" # Map host port 443 to container port 443 (HTTPS)
+          - "80:80"
+          - "443:443"
         volumes:
-          # Mount your custom Nginx server block configuration
           - ./nginx/server_block.conf:/opt/bitnami/nginx/conf/server_blocks/yourapp.conf:ro
-          - ../backend:/app # Nginx also needs access to your application files to serve PHP
+          - ../backend:/app

       mysql:
-        image: bitnami/mysql:latest
+        image: bitnami/mysql:9.3.0
         networks:
           - app-tier
-        environment:
-          - MYSQL_ROOT_PASSWORD='Sup3r$tron0P4ssw0rd' # !! IMPORTANT: CHANGE THIS PASSWORD IN PRODUCTION !!
-          - MYSQL_DATABASE=exchange_rate_db
-          - MYSQL_USER=exchange_user
-          - MYSQL_PASSWORD='$tron0P4ssw0rd' # !! IMPORTANT: CHANGE THIS PASSWORD IN PRODUCTION !!
         volumes:
-          - mysql_data:/bitnami/mysql # Persistent volume for MySQL data to prevent data loss
+          - mysql_data:/bitnami/mysql
+        env_file: ../backend/.env
+        environment:
+          - MYSQL_ROOT_PASSWORD=Sup3rStron0P4ssw0rd
+          - MYSQL_DATABASE=${DB_NAME}
+          - MYSQL_USER=${DB_USER}
+          - MYSQL_PASSWORD=${DB_PASS}

       redis:
-        image: bitnami/redis:latest
+        image: bitnami/redis:8.0.3
         networks:
           - app-tier
-        environment:
-          - REDIS_PASSWORD='Sup3r$tron0P4ssw0rd' # !! IMPORTANT: CHANGE THIS PASSWORD IN PRODUCTION !!
         volumes:
-          - redis_data:/bitnami/redis # Persistent volume for Redis data
+          - redis_data:/bitnami/redis
+        env_file: ../backend/.env
+        environment:
+          - REDIS_PASSWORD=${REDIS_AUTH}

     volumes:
-      mysql_data: # Define named volume for MySQL persistence
-      redis_data: # Define named volume for Redis persistence
+      mysql_data:
+      redis_data:
     ```

 7.  **Build and Run Docker Containers:**
-    From your project's root directory (where the `docker` folder is located), execute the following commands to build your custom PHP-FPM image and start all services:
-
-    ```bash
-    docker compose -f ./docker/docker-compose.yaml down          # Stop and remove any previously running containers
-    docker compose -f ./docker/docker-compose.yaml build phpfpm # Build the custom PHP-FPM image
-    docker compose -f ./docker/docker-compose.yaml up -d        # Start all defined services in detached mode
-    ```
-
-8.  **Install PHP Dependencies (Composer):**
-    Once your `phpfpm` container is running, install your backend's PHP dependencies using Composer:
+    From your project's root directory (where the `docker` folder is located), execute the following command to build and start all services:

     ```bash
-    docker compose -f ./docker/docker-compose.yaml exec phpfpm composer install -d /app
+    docker compose --env-file backend/.env -f docker/docker-compose.yaml up --build -d
     ```
-    The `-d /app` flag tells Composer to run inside the `/app` directory, which is where your `backend` code is mounted in the `phpfpm` container.

-9.  **Access the Backend API:**
+8.  **Access the Backend API:**
     Your backend API should now be accessible via Nginx on your local machine.
-    * **Base API Endpoint:** `http://localhost/` (or specific API routes you've defined in Slim).
-    * **PHP Info (for verification):** For development purposes, you can create a temporary `phpinfo.php` file in your `backend/public/` directory with the content `<?php phpinfo();`. Then, visit `http://localhost/phpinfo.php` in your browser. **Remember to remove this file immediately after verification for security reasons.**
+    * **Base API Endpoint:** `http://localhost/api` (or specific API routes you've defined in Slim).

 ---

@@ -223,26 +232,24 @@ This section provides more specific information about the PHP backend applicatio

 * `backend/src/`: Contains your application's source code, following the `App\` namespace as defined in `composer.json`.
 * `backend/public/`: The web server's document root, containing `index.php` as the entry point for the Slim application.
+* `backend/bootstrap/`: The web server's bootstraping used to define all app routes, deps and more.
+* `backend/config/`: The web server's configuration directives.
 * `backend/vendor/`: Composer's directory for installed third-party dependencies (managed by Docker).

-### Dependencies (from `composer.json`):
+### Dependencies (from `composer.json` and `php`):

-* `slim/slim: 4.*`
-* `slim/psr7: ^1.7`
-* **phpredis extension:** Installed via `pecl` in the `php-fpm-custom/Dockerfile` for Redis integration.

-## 3. Frontend Application (Planned)
-
-This project is planned to include a dedicated frontend application that will consume the backend API to provide a user interface for exchange rate data.
+* "slim/slim": "4.*",
+* "slim/psr7": "^1.7",
+* "php-di/slim-bridge": "^3.4",
+* "vlucas/phpdotenv": "^5.6"
+* **mysqli extension:** Enabled via php.ini.
+* **pdo_mysql extension:** Enabled via php.ini.
+* **php_redis extension:** Installed via `pecl` in the `php-fpm/Dockerfile` for Redis integration.

-### Planned Technologies:
-
-* **React:** The core JavaScript library for building user interfaces.
-* **UI Framework/Library (Under Consideration):**
-    * **TanStack Start:** A full-stack meta-framework for React, offering advanced data fetching, routing, and potential server-side rendering capabilities.
-    * *Alternatively, a more traditional **client-side rendering (CSR) React setup** using a lighter router (like TanStack Router only) is also being evaluated based on final project requirements and complexity.*
+## 3. Frontend Application (Planned)

-The frontend will reside in a separate `frontend/` directory at the project root and will be integrated into the Docker Compose setup for consistent development. Further details will be added to this `README.md` once the frontend technology stack is finalized.
+Will be located in /frontend, likely using React + TanStack Router.

 ---

diff --git a/backend/.gitignore b/backend/.gitignore
index 549562c..1da9be5 100644
--- a/backend/.gitignore
+++ b/backend/.gitignore
@@ -1,2 +1,5 @@
 ## PHP/Composer ##
-/vendor/
\ No newline at end of file
+/vendor/
+
+## Env ##
+.env
\ No newline at end of file
diff --git a/backend/composer.json b/backend/composer.json
index 7cc01ad..3be1ac4 100644
--- a/backend/composer.json
+++ b/backend/composer.json
@@ -20,6 +20,7 @@
     "require": {
         "slim/slim": "4.*",
         "slim/psr7": "^1.7",
-        "php-di/slim-bridge": "^3.4"
+        "php-di/slim-bridge": "^3.4",
+        "vlucas/phpdotenv": "^5.6"
     }
 }
diff --git a/backend/composer.lock b/backend/composer.lock
index 099b28d..d4d049f 100644
--- a/backend/composer.lock
+++ b/backend/composer.lock
@@ -4,7 +4,7 @@
         "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
         "This file is @generated automatically"
     ],
-    "content-hash": "e8532ac2f98c9de6fd2245ffb60eda21",
+    "content-hash": "c67e1ab70b630fbaae10c0640ed6b623",
     "packages": [
         {
             "name": "fig/http-message-util",
@@ -62,6 +62,68 @@
             },
             "time": "2020-11-24T22:02:12+00:00"
         },
+        {
+            "name": "graham-campbell/result-type",
+            "version": "v1.1.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/GrahamCampbell/Result-Type.git",
+                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/3ba905c11371512af9d9bdd27d99b782216b6945",
+                "reference": "3ba905c11371512af9d9bdd27d99b782216b6945",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2.5 || ^8.0",
+                "phpoption/phpoption": "^1.9.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "GrahamCampbell\\ResultType\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                }
+            ],
+            "description": "An Implementation Of The Result Type",
+            "keywords": [
+                "Graham Campbell",
+                "GrahamCampbell",
+                "Result Type",
+                "Result-Type",
+                "result"
+            ],
+            "support": {
+                "issues": "https://github.com/GrahamCampbell/Result-Type/issues",
+                "source": "https://github.com/GrahamCampbell/Result-Type/tree/v1.1.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/graham-campbell/result-type",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2024-07-20T21:45:45+00:00"
+        },
         {
             "name": "laravel/serializable-closure",
             "version": "v2.0.4",
@@ -343,6 +405,81 @@
             },
             "time": "2024-06-19T15:47:45+00:00"
         },
+        {
+            "name": "phpoption/phpoption",
+            "version": "1.9.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/schmittjoh/php-option.git",
+                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/schmittjoh/php-option/zipball/e3fac8b24f56113f7cb96af14958c0dd16330f54",
+                "reference": "e3fac8b24f56113f7cb96af14958c0dd16330f54",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2.5 || ^8.0"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.8.2",
+                "phpunit/phpunit": "^8.5.39 || ^9.6.20 || ^10.5.28"
+            },
+            "type": "library",
+            "extra": {
+                "bamarni-bin": {
+                    "bin-links": true,
+                    "forward-command": false
+                },
+                "branch-alias": {
+                    "dev-master": "1.9-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "PhpOption\\": "src/PhpOption/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "Apache-2.0"
+            ],
+            "authors": [
+                {
+                    "name": "Johannes M. Schmitt",
+                    "email": "schmittjoh@gmail.com",
+                    "homepage": "https://github.com/schmittjoh"
+                },
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                }
+            ],
+            "description": "Option Type for PHP",
+            "keywords": [
+                "language",
+                "option",
+                "php",
+                "type"
+            ],
+            "support": {
+                "issues": "https://github.com/schmittjoh/php-option/issues",
+                "source": "https://github.com/schmittjoh/php-option/tree/1.9.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/phpoption/phpoption",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2024-07-20T21:41:07+00:00"
+        },
         {
             "name": "psr/container",
             "version": "2.0.2",
@@ -909,6 +1046,166 @@
             ],
             "time": "2024-06-13T08:54:48+00:00"
         },
+        {
+            "name": "symfony/polyfill-ctype",
+            "version": "v1.32.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-ctype.git",
+                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/a3cc8b044a6ea513310cbd48ef7333b384945638",
+                "reference": "a3cc8b044a6ea513310cbd48ef7333b384945638",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.2"
+            },
+            "provide": {
+                "ext-ctype": "*"
+            },
+            "suggest": {
+                "ext-ctype": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "thanks": {
+                    "url": "https://github.com/symfony/polyfill",
+                    "name": "symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Ctype\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Gert de Pagter",
+                    "email": "BackEndTea@gmail.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for ctype functions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "ctype",
+                "polyfill",
+                "portable"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.32.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2024-09-09T11:45:10+00:00"
+        },
+        {
+            "name": "symfony/polyfill-mbstring",
+            "version": "v1.32.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-mbstring.git",
+                "reference": "6d857f4d76bd4b343eac26d6b539585d2bc56493"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/6d857f4d76bd4b343eac26d6b539585d2bc56493",
+                "reference": "6d857f4d76bd4b343eac26d6b539585d2bc56493",
+                "shasum": ""
+            },
+            "require": {
+                "ext-iconv": "*",
+                "php": ">=7.2"
+            },
+            "provide": {
+                "ext-mbstring": "*"
+            },
+            "suggest": {
+                "ext-mbstring": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "thanks": {
+                    "url": "https://github.com/symfony/polyfill",
+                    "name": "symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Mbstring\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for the Mbstring extension",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "mbstring",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.32.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2024-12-23T08:48:59+00:00"
+        },
         {
             "name": "symfony/polyfill-php80",
             "version": "v1.32.0",
@@ -988,6 +1285,90 @@
                 }
             ],
             "time": "2025-01-02T08:10:11+00:00"
+        },
+        {
+            "name": "vlucas/phpdotenv",
+            "version": "v5.6.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/vlucas/phpdotenv.git",
+                "reference": "24ac4c74f91ee2c193fa1aaa5c249cb0822809af"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/vlucas/phpdotenv/zipball/24ac4c74f91ee2c193fa1aaa5c249cb0822809af",
+                "reference": "24ac4c74f91ee2c193fa1aaa5c249cb0822809af",
+                "shasum": ""
+            },
+            "require": {
+                "ext-pcre": "*",
+                "graham-campbell/result-type": "^1.1.3",
+                "php": "^7.2.5 || ^8.0",
+                "phpoption/phpoption": "^1.9.3",
+                "symfony/polyfill-ctype": "^1.24",
+                "symfony/polyfill-mbstring": "^1.24",
+                "symfony/polyfill-php80": "^1.24"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.8.2",
+                "ext-filter": "*",
+                "phpunit/phpunit": "^8.5.34 || ^9.6.13 || ^10.4.2"
+            },
+            "suggest": {
+                "ext-filter": "Required to use the boolean validator."
+            },
+            "type": "library",
+            "extra": {
+                "bamarni-bin": {
+                    "bin-links": true,
+                    "forward-command": false
+                },
+                "branch-alias": {
+                    "dev-master": "5.6-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Dotenv\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                },
+                {
+                    "name": "Vance Lucas",
+                    "email": "vance@vancelucas.com",
+                    "homepage": "https://github.com/vlucas"
+                }
+            ],
+            "description": "Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.",
+            "keywords": [
+                "dotenv",
+                "env",
+                "environment"
+            ],
+            "support": {
+                "issues": "https://github.com/vlucas/phpdotenv/issues",
+                "source": "https://github.com/vlucas/phpdotenv/tree/v5.6.2"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/vlucas/phpdotenv",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2025-04-30T23:37:27+00:00"
         }
     ],
     "packages-dev": [],
diff --git a/backend/public/index.php b/backend/public/index.php
index 3db1d2b..c4cecfe 100644
--- a/backend/public/index.php
+++ b/backend/public/index.php
@@ -1,14 +1,12 @@
 <?php

-use DI\Bridge\Slim\Bridge;
-use App\Controllers\HomeController;
+declare(strict_types=1);

-require __DIR__ . '/../vendor/autoload.php';
-
-$app = Bridge::create();
+use Slim\App;

-$app->setBasePath('/api');
+require __DIR__ . '/../vendor/autoload.php';

-$app->get('/', [HomeController::class, 'index']);
+/** @var App $app */
+$app = require __DIR__ . '/../bootstrap/app.php';

 $app->run();
diff --git a/backend/src/Controllers/HomeController.php b/backend/src/Controllers/HomeController.php
deleted file mode 100644
index d1a8a3d..0000000
--- a/backend/src/Controllers/HomeController.php
+++ /dev/null
@@ -1,14 +0,0 @@
-<?php
-
-namespace App\Controllers;
-
-use Psr\Http\Message\ResponseInterface as Response;
-
-class HomeController
-{
-    public function index(Response $response): Response
-    {
-        $response->getBody()->write("Hello from Slim in /api");
-        return $response;
-    }
-}
\ No newline at end of file
diff --git a/docker/docker-compose.yaml b/docker/docker-compose.yaml
index b9adb46..727fb43 100644
--- a/docker/docker-compose.yaml
+++ b/docker/docker-compose.yaml
@@ -7,10 +7,14 @@ networks:
 services:
   phpfpm:
     build: ./php-fpm
+    depends_on:
+      - mysql
+      - redis
     networks:
       - app-tier
     volumes:
       - ../backend:/app
+    env_file: ../backend/.env

   nginx:
     image: bitnami/nginx:1.29.0
@@ -29,22 +33,24 @@ services:
     image: bitnami/mysql:9.3.0
     networks:
       - app-tier
-    environment:
-      - MYSQL_ROOT_PASSWORD=Sup3rStron0P4ssw0rd
-      - MYSQL_DATABASE=exchange_rate_db
-      - MYSQL_USER=exchange_user
-      - MYSQL_PASSWORD=Stron0P4ssw0rd
     volumes:
       - mysql_data:/bitnami/mysql
+    env_file: ../backend/.env
+    environment:
+      - MYSQL_ROOT_PASSWORD=Sup3rStron0P4ssw0rd
+      - MYSQL_DATABASE=${DB_NAME}
+      - MYSQL_USER=${DB_USER}
+      - MYSQL_PASSWORD=${DB_PASS}

   redis:
     image: bitnami/redis:8.0.3
     networks:
       - app-tier
-    environment:
-      - REDIS_PASSWORD=Sup3rStron0P4ssw0rd
     volumes:
       - redis_data:/bitnami/redis
+    env_file: ../backend/.env
+    environment:
+      - REDIS_PASSWORD=${REDIS_AUTH}

 volumes:
   mysql_data:
diff --git a/docker/nginx/server_block.conf b/docker/nginx/server_block.conf
index 9333c1c..1196297 100644
--- a/docker/nginx/server_block.conf
+++ b/docker/nginx/server_block.conf
@@ -9,12 +9,11 @@ server {
         try_files $uri /index.html;
     }

-    # Slim PHP backend em /api
+    # Slim PHP
     location = /api {
         return 301 /api/;
     }

-    # Slim app
     location ^~ /api/ {
         try_files $uri /index.php$is_args$args;
     }
@@ -30,8 +29,8 @@ server {
         fastcgi_pass phpfpm:9000;
     }

-    # Segurança (opcional)
-    location ~ /\.ht {
+    # Security
+    location ~ /\.(?!well-known).* {
         deny all;
     }
 }
diff --git a/docker/php-fpm/Dockerfile b/docker/php-fpm/Dockerfile
index 47cbe25..55c760b 100644
--- a/docker/php-fpm/Dockerfile
+++ b/docker/php-fpm/Dockerfile
@@ -1,7 +1,6 @@
-# php-fpm-custom/Dockerfile
 FROM bitnami/php-fpm:8.4.8

-# Instalar dependências de build, INCLUINDO 'build-essential'
+# Install build dependencies, INCLUDING 'build-essential'
 RUN apt-get update && apt-get install -y \
     build-essential \
     pkg-config \
@@ -10,11 +9,11 @@ RUN apt-get update && apt-get install -y \
     gnupg \
     && rm -rf /var/lib/apt/lists/*

-# Instalar a extensão Redis via PECL
+# Installs Redis extension via PECL
 RUN pecl install redis \
     && echo "extension=redis.so" > /opt/bitnami/php/etc/conf.d/redis.ini

-# Limpar as dependências de build após a instalação para manter a imagem menor
+# Clean build deps, reducing the final image size
 RUN apt-get purge -y --auto-remove \
     build-essential \
     pkg-config \